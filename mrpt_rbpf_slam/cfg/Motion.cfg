#! /usr/bin/env python

PACKAGE='mrpt_rbpf_slam'
from dynamic_reconfigure.parameter_generator_catkin import *
gen = ParameterGenerator()
  
enum_motion_noise_type = gen.enum([gen.const("gaussian", int_t, 0, "gaussian"), gen.const("Thrun", int_t, 1, "Thrun")], "motion type")
gen.add("motion_noise_type", int_t, 0, "motion noise", 0, 0, 1, edit_method=enum_motion_noise_type)
gen.add("gaussian_alpha_1", double_t, 0, "alpha_1", 0.034, 0, 1)
gen.add("gaussian_alpha_2", double_t, 0, "alpha_2", 0.057, 0, 1)
gen.add("gaussian_alpha_3", double_t, 0, "alpha_3", 0.014, 0, 1)
gen.add("gaussian_alpha_4", double_t, 0, "alpha_4", 0.097, 0, 1)
gen.add("gaussian_alpha_xy", double_t, 0, "alpha_xy", 0.005, 0, 1)
gen.add("gaussian_alpha_phi", double_t, 0, "alpha_phi", 0.05, 0, 3.14)

gen.add("thrun_particle_count", int_t, 0, "alpha_1", 100, 0, 1000)
gen.add("thrun_alpha_1_rot_rot", double_t, 0, "rot_rot", 0.1, 0, 3.14)
gen.add("thrun_alpha_2_rot_trans", double_t, 0, "rot_trans", 0.1, 0, 3.14)
gen.add("thrun_alpha_3_trans_trans", double_t, 0, "trans_trans", 0.1, 0, 1)
gen.add("thrun_alpha_4_trans_rot", double_t, 0, "trans_rot", 0.1, 0, 1)
gen.add("thrun_additional_std_XY", double_t, 0, "std_XY", 0.1, 0, 3.14)
gen.add("thrun_additional_std_phi", double_t, 0, "std_phi", 0.1, 0, 3.14)

exit(gen.generate(PACKAGE, "mrpt_rbpf_slam", "Motion"))
